steps:
- id: 'build'
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/gceme:${SHORT_SHA}', '.' ]

- id: 'publish'
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', 'gcr.io/$PROJECT_ID/gceme:${SHORT_SHA}' ]

- id: 'deploy'
  name: 'gcr.io/cloud-builders/gcloud'
  env:
    - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
    - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
    - 'KUBECONFIG=/kube/config'
  args: [ 'CLUSTER=$$(gcloud config get-value container/cluster)', 'PROJECT=$$(gcloud config get-value core/project)',
          'ZONE=$$(gcloud config get-value compute/zone)',
          'gcloud container clusters get-credentials "$${CLUSTER}" --project "$${PROJECT}" --zone "$${ZONE}"',
          'sed -i ''s|gcr.io/cloud-solutions-images/gceme:.*|gcr.io/$PROJECT_ID/gceme:${SHORT_SHA}|'' ./kubernetes/deployments/canary/*.yaml\',
          'kubectl apply --namespace production --recursive -f kubernetes/deployments/canary',
          'kubectl apply --namespace production --recursive -f kubernetes/services'
        ]